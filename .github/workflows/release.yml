name: Release App

on:
  push:
    branches:
      - 'release/v**'

jobs:
  release-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        env:
          OAUTH_CLIENT_ID: ${{ secrets.oauth_client_id }}
          OAUTH_CLIENT_SECRET: ${{ secrets.oauth_client_secret }}
        run: yarn build

      - name: Publish macOS (electron-builder)
        env:
          APPLEID_USERNAME: ${{ secrets.appleid_username }}
          APPLEID_PASSWORD: ${{ secrets.appleid_password }}
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}
          GH_TOKEN: ${{ secrets.gh_token }}
          NOTARIZE: true
        run: yarn make:macos --publish onTagOrDraft

  release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        env:
          OAUTH_CLIENT_ID: ${{ secrets.oauth_client_id }}
          OAUTH_CLIENT_SECRET: ${{ secrets.oauth_client_secret }}
        run: yarn build

      - name: Publish Windows (electron-builder)
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: yarn make:win --publish onTagOrDraft

  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        env:
          OAUTH_CLIENT_ID: ${{ secrets.oauth_client_id }}
          OAUTH_CLIENT_SECRET: ${{ secrets.oauth_client_secret }}
        run: yarn build

      - name: Publish Linuxs (electron-builder)
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: yarn make:linux --publish onTagOrDraft
