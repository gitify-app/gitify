// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils/github-api.ts formatReason - should format the notification reason 1`] = `
{
  "description": "You were requested to review and approve a deployment.",
  "title": "Approval Requested",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 2`] = `
{
  "description": "You were assigned to the issue.",
  "title": "Assigned",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 3`] = `
{
  "description": "You created the thread.",
  "title": "Authored",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 4`] = `
{
  "description": "A GitHub Actions workflow run was triggered for your repository.",
  "title": "Workflow Run Completed",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 5`] = `
{
  "description": "You commented on the thread.",
  "title": "Commented",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 6`] = `
{
  "description": "You accepted an invitation to contribute to the repository.",
  "title": "Invitation Received",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 7`] = `
{
  "description": "You subscribed to the thread (via an issue or pull request).",
  "title": "Updated",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 8`] = `
{
  "description": "Organization members have requested to enable a feature such as Draft Pull Requests or Copilot.",
  "title": "Member Feature Requested",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 9`] = `
{
  "description": "You were specifically @mentioned in the content.",
  "title": "Mentioned",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 10`] = `
{
  "description": "You, or a team you're a member of, were requested to review a pull request.",
  "title": "Review Requested",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 11`] = `
{
  "description": "You were credited for contributing to a security advisory.",
  "title": "Security Advisory Credit Received",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 12`] = `
{
  "description": "GitHub discovered a security vulnerability in your repository.",
  "title": "Security Alert Received",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 13`] = `
{
  "description": "You changed the thread state (for example, closing an issue or merging a pull request).",
  "title": "State Changed",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 14`] = `
{
  "description": "You're watching the repository.",
  "title": "Updated",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 15`] = `
{
  "description": "You were on a team that was mentioned.",
  "title": "Team Mentioned",
}
`;

exports[`utils/github-api.ts formatReason - should format the notification reason 16`] = `
{
  "description": "The reason for this notification is not supported by the app.",
  "title": "Unknown",
}
`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for check suite 1`] = `"text-gray-500 dark:text-gray-300"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for check suite 2`] = `"text-red-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for check suite 3`] = `"text-gray-500 dark:text-gray-300"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for check suite 4`] = `"text-green-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for check suite 5`] = `"text-gray-500 dark:text-gray-300"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 1`] = `"text-green-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 2`] = `"text-red-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 3`] = `"text-purple-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 4`] = `"text-gray-500 dark:text-gray-300"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 5`] = `"text-purple-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 6`] = `"text-gray-500 dark:text-gray-300"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 7`] = `"text-green-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 8`] = `"text-green-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 9`] = `"text-purple-500"`;

exports[`utils/github-api.ts getNotificationTypeIconColor should format the notification color for state 10`] = `"text-gray-500 dark:text-gray-300"`;
